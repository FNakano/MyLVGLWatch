<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="NetworkNoScreen_8cpp" kind="file" language="C++">
    <compoundname>NetworkNoScreen.cpp</compoundname>
    <includes refid="NetworkNoScreen_8h" local="yes">NetworkNoScreen.h</includes>
    <incdepgraph>
      <node id="7">
        <label>driver/adc.h</label>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
      <node id="1">
        <label>/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp</label>
        <link refid="NetworkNoScreen_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>NetworkNoScreen.h</label>
        <link refid="NetworkNoScreen_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>LilyGoWatch.h</label>
      </node>
      <node id="5">
        <label>WiFi.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1a587ba0cb07f02913598610049a3bbb79" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ssid</definition>
        <argsstring></argsstring>
        <name>ssid</name>
        <initializer>= &quot;NameOfNetworkTP&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change this to the name of your wifi network </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="12" column="19" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1aa4a2ebcb494493f648ae1e6975672575" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* password</definition>
        <argsstring></argsstring>
        <name>password</name>
        <initializer>= &quot;0123456789&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change this to the password of your wifi network </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="13" column="19" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1a6bd950625db0f240acc63a9cb41873f6" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ntpServer</definition>
        <argsstring></argsstring>
        <name>ntpServer</name>
        <initializer>= &quot;pool.ntp.org&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get time and date from this &quot;web server&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="16" column="19" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1a6c7db28543c3b2ef692f8dcb63964f2b" prot="public" static="yes" mutable="no">
        <type>const long</type>
        <definition>const long gmtOffset_sec</definition>
        <argsstring></argsstring>
        <name>gmtOffset_sec</name>
        <initializer>= -3*3600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>timezone offset in seconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="17" column="20" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1abcecff6206d272c30174ca268e2e6f0a" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int daylightOffset_sec</definition>
        <argsstring></argsstring>
        <name>daylightOffset_sec</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>daylight saving time offset in seconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="18" column="20" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NetworkNoScreen_8cpp_1aec6038a992c330945d839889e3d75e5d" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char ip[]</definition>
        <argsstring>[]</argsstring>
        <name>ip</name>
        <initializer>=&quot;255.255.255.255&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to store the IP returned in <ref refid="NetworkNoScreen_8cpp_1ae3d8af61d86af4fa3c59e6b94b5cdee9" kindref="member">getIP()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="20" column="13" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="NetworkNoScreen_8cpp_1aa70dd1a4d3251d20a5a001013f0bb596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wiFiOff</definition>
        <argsstring>()</argsstring>
        <name>wiFiOff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn wifi off </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="22" column="6" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="22" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="NetworkNoScreen_8cpp_1a40d26e533935b20ac90a7b3b46945bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wiFiOn</definition>
        <argsstring>()</argsstring>
        <name>wiFiOn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn wifi on </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="32" column="5" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="32" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="NetworkNoScreen_8cpp_1ac09d49a5bcbab63c67fbf63e3eadc043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setClockNTP</definition>
        <argsstring>()</argsstring>
        <name>setClockNTP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjust clock using network time. Need Wifi turned on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="55" column="5" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="55" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="NetworkNoScreen_8cpp_1ae3d8af61d86af4fa3c59e6b94b5cdee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* getIP</definition>
        <argsstring>()</argsstring>
        <name>getIP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get IP address. It can be used to connect a web browser to the watch. <simplesect kind="return"><para>IP address as a string eg. 192.168.0.100 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" line="83" column="13" bodyfile="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>user: Functions to access wifi (and bluetooth in future releases). SSID is NameOfNetworkTP and Password is 0123456789 (in this release it cannot be changed eg. through a watch screen)</para>
<para>developer: software layer to abstract out networking details and give the user a clean interface to network communication features. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;NetworkNoScreen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WiFi<sp/>settings<sp/>change<sp/>ssid<sp/>and<sp/>password<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>according<sp/>to<sp/>your<sp/>local<sp/>setup.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ssid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NameOfNetworkTP&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">/*<sp/>NTP<sp/>(Network<sp/>Time<sp/>Protocol)<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ntpServer<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;pool.ntp.org&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>gmtOffset_sec<sp/><sp/><sp/>=<sp/>-3*3600;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>daylightOffset_sec<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ip[]=</highlight><highlight class="stringliteral">&quot;255.255.255.255&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="NetworkNoScreen_8cpp_1aa70dd1a4d3251d20a5a001013f0bb596" kindref="member">wiFiOff</ref><sp/>()<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Code<sp/>do<sp/>turn<sp/>Wifi<sp/>off.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>based<sp/>on:<sp/>https://www.mischianti.org/2021/03/06/esp32-practical-power-saving-manage-wifi-and-cpu-1/</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.disconnect(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.mode(WIFI_OFF);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_power_off();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="NetworkNoScreen_8cpp_1a40d26e533935b20ac90a7b3b46945bd8" kindref="member">wiFiOn</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nWiFiProbe<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_WIFIPROBE<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>ESP32<sp/>WiFi<sp/>on<sp/>and<sp/>connect<sp/>to<sp/>Access<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.printf(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>connect<sp/>to<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>ssid);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>adc_power_on();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.mode(WIFI_STA);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>WiFi.begin(ssid,<sp/>password);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(WiFi.status()<sp/>!=<sp/>WL_CONNECTED)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(500);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tft-&gt;print(&quot;.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nWiFiProbe&gt;MAX_WIFIPROBE)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="NetworkNoScreen_8cpp_1aa70dd1a4d3251d20a5a001013f0bb596" kindref="member">wiFiOff</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIFI_FAILED_TO_CONNECT;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWiFiProbe++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;<sp/>CONNECTED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIFI_CONNECTED;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="NetworkNoScreen_8cpp_1ac09d49a5bcbab63c67fbf63e3eadc043" kindref="member">setClockNTP</ref>()<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Turn<sp/>radio<sp/>(WiFi)<sp/>on,<sp/>connect<sp/>to<sp/>AP,<sp/>requests</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>current<sp/>time<sp/>from<sp/>NTP,<sp/>store<sp/>time<sp/>into<sp/>RTC,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>turn<sp/>radio<sp/>off.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>TTGOClass<sp/>*ttgo<sp/>=<sp/>TTGOClass::getWatch();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>watch<sp/>internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>PCF8563_Class<sp/>*rtc<sp/>=<sp/>ttgo-&gt;rtc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>RTC<sp/>(real-time<sp/>clock)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="NetworkNoScreen_8cpp_1a40d26e533935b20ac90a7b3b46945bd8" kindref="member">wiFiOn</ref>())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//init,<sp/>get<sp/>current<sp/>time<sp/>from<sp/>NTP<sp/>server<sp/>and<sp/>store<sp/>it<sp/>in<sp/>ESP32<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configTime(gmtOffset_sec,<sp/>daylightOffset_sec,<sp/>ntpServer);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>timeinfo;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getLocalTime(&amp;timeinfo))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>obtain<sp/>time.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="NetworkNoScreen_8cpp_1aa70dd1a4d3251d20a5a001013f0bb596" kindref="member">wiFiOff</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIFI_NTP_FAILED;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(&amp;timeinfo,<sp/></highlight><highlight class="stringliteral">&quot;%A,<sp/>%B<sp/>%d<sp/>%Y<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc-&gt;syncToRtc();<sp/></highlight><highlight class="comment">//<sp/>write<sp/>current<sp/>time<sp/>into<sp/>watch<sp/>RTC<sp/>(PCF8563)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIFI_NTP_CLOCK_SET;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="NetworkNoScreen_8cpp_1aa70dd1a4d3251d20a5a001013f0bb596" kindref="member">wiFiOff</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WIFI_NTP_FAILED;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="NetworkNoScreen_8cpp_1ae3d8af61d86af4fa3c59e6b94b5cdee9" kindref="member">getIP</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>IPAddress<sp/>ipToPrint<sp/>=<sp/>WiFi.localIP();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>sprintf(ip,<sp/></highlight><highlight class="stringliteral">&quot;%u.%u.%u.%u&quot;</highlight><highlight class="normal">,<sp/>ipToPrint[0],<sp/>ipToPrint[1],<sp/>ipToPrint[2],<sp/>ipToPrint[3]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ip;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/fabio/Arduino/MyLvglWatch-20220910/NetworkNoScreen.cpp"/>
  </compounddef>
</doxygen>
